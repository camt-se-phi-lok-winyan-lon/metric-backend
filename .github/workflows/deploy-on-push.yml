name: Deployment to aws
on:
  push:
    branches:
      - dev
      - deployment

jobs:
  build-backend:
    name: build-backend
    runs-on: ubuntu-latest
    steps:
      - name: checkout
        uses: actions/checkout@v2
      - name: setup Java
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'adopt'
      - name: run Maven
        run: |
          mvn clean install -DskipTests -B
          mkdir -p target/dependency && (cd target/dependency; unzip ../*.jar)
        working-directory: ./kaew-wan-backend
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/metric-be:latest
          context: ./kaew-wan-backend
  deploy-to-aws:
    needs: [build-backend]
    runs-on: ubuntu-latest
    env:
      DOCKER_HUB_USERNAME: ${{ secrets.DOCKER_HUB_USERNAME }}
    steps:
      -
        name: checkout
        uses: actions/checkout@v2
      -
        name: Copy file via ssh password
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          source: "docker-compose.yml"
          target: "/home/ubuntu/metric-be"
      -
        name: docker compose
        uses: appleboy/ssh-action@v0.1.10
        with:
          host: ${{ secrets.HOST_SERVER }}
          username: ${{ secrets.HOST_USERNAME }}
          key: ${{ secrets.PRIVATE_KEY }}
          port: 22
          script: |
            export DOCKER_HUB_USERNAME=${{ secrets.DOCKER_HUB_USERNAME }}
            cd /home/ubuntu/metric-be
            echo ${{ secrets.DOCKER_HUB_TOKEN }} | docker login --username ${{ secrets.DOCKER_HUB_USERNAME }} --password-stdin
            docker compose down
            docker compose pull
            docker compose up -d
            rm -rf /home/ubuntu/metric-be